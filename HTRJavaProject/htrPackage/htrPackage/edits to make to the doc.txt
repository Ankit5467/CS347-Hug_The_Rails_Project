EDITS/Change to make to the document:

LIST OF ALL CHANGES WE NEED TO MAKE TO THE DOC.
If your name is in parentheses, that means you're in charge to making the change. 

DONE::
- [DONE - can someone just review this?] Section 2.3: Update timeline (ankit)
- [DONE] Section 3: Make sure we fulfill all the requirements. Remove all the requirements that we didnt complete. (ankit)
- [DONE] Section 3: Add the new reqs. (Ankit)
- [DONE] section 4.1 usecases:
	- [DONE] Update/revise wording (ankit)
	- [DONE] Fix preconditions for 4.1.1 and 4.1.2 (ankit)
	- [DONE] revise the use cases for "automated/automatic" actions. (4.1.7 | 4.1.9 | 4.1.11) (ankit)
	- [DONE] edit the stuff that we say is written to the log (ankit)
	- [DONE - someone double check]
- [DONE] section 4.6: read over seq diagrams & update them if applicable. (ankit)
- [DONE] section 4.7: update the state diagram (ankit)
- [DONE] section 5.4: update the input/output table (ankit).
- [DONE] Add Usecases for new reqs! (Ankit)
- [DONE] section 4.3: update the class-based diagram. Add the appropriate methods/data fields & add the new classes. (jan)
- [DONE] section 4.4: update it. (jan)
- [DONE] - paste the final code on the document.

TODO:

- [TODO] section 4.5: read over it & update it if applicable. (faraz)
- [TODO] section 5.1 and 5.3: update the table. See feedback on canvas for the section 5 doc. (jan + faraz).
- [TODO] - UPDATE appropriate diagrams (SECTION 4) w/ regards to the new requirements (Jan + faraz <- update the diagrams that u worked on)
- [TODO] Add test cases for functional reqs & their results to the document (Ayo/Faraz?).
	- [TODo] test cases for the horn (Ayo)

FINAL TOUCHES: 
- [TODO] - Work on the formal technical review & other things reza talked about in 4/29 lecture. 
- [TODO] - FORMAT THE DOCUMENT.



REVIEW PART:
- complete the coding
- have test file
- hold a formal review of the product before submission
- have a post-mortem meeting
	- talk about pos/neg/learning experiences
	- what went well/not well
- Create a document where you explain the installation & running process.

- during 15 min pres, 
	- he will do a black-box test on the product. (demo)
	- we go over post-mortem notes
	- pres is graded

- Main document, and every supplemental document is graded.

Reviews:
	- Look for errors and defects.
		- error: a problem found before software is released.
		- detect: a problem found after software is released.
	- List the review metrics -- 4/29 lect: min 11 - 15
	- A meeting has several components:
		-	Planning & prep: date, time, who should be there etc...
		-	Each person at the review has a role/responsibility
			- eg: Review leader, notetaker, someone who goes over the testcases/requirements (ie: Reviewer), people who have developed the work product (ie: Producer), etc...
		- Meeting structure
		- Correction & Verification (later)
		
	Formal Technical Reviews (aka: walkthrough/inspection): (min 20)
		- Review the big document, installation guide, and test file.
		
		-	Objective:
			- Uncover any & all errors
			- Verify software meets all reqs
		- The review Meeting:
			- Prepare in advance (max 2 hrs of prep per person)
			- Review roles (min 22)
				- Reporter/notetaker responsibilites : min 24
			- Review Outcome
				- accept (no errors)
				- recject (major errors)
				- accept provisionally (minor errors)
		- review guidelines:
			- set an agenda & maintain it
			- limit debate/arguing
			- Note the problems, dont try to solve the problems
			- has to be written.
			
		- After the formal techical review, a Formal Technical Review Summary Report is created by the notetaker/recorder.
			-	it answers the questions:
				- what was reviewed, who reviewed it, and what were the findings/conclusions?
			- Report should be b/w 0.5 to 1 pages long.
			- We have to submit this document!
			
	
	Postmortem evaluations (min 28):
		- talk/write about what went write and what went wrong.
		- 
	
Submission contains:
	- Formal technical review (~1 pg)
	- postmortem meeting notes (~1 pg)
	- Big document (?)
	- The code (?)